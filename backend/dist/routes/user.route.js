"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const user_controller_1 = require("../controller/user.controller");
const post_controller_1 = require("../controller/post.controller");
const protectedUser_1 = require("../middleware/protectedUser");
const comment_controller_1 = require("../controller/comment.controller");
const like_controller_1 = require("../controller/like.controller");
const router = express_1.default.Router();
router.post('/signup', user_controller_1.userSignUp);
router.post('/login', user_controller_1.userLogin);
router.post('/logout', user_controller_1.userLogout);
router.put('/profile/:id/update', protectedUser_1.protectedUser, user_controller_1.updateUserProfilePic);
router.get('/info', protectedUser_1.protectedUser, user_controller_1.userInformation);
router.post('/create/post', protectedUser_1.protectedUser, post_controller_1.createPost);
router.get('/post/:id', protectedUser_1.protectedUser, post_controller_1.getPost);
router.put('/post/:id/edit', protectedUser_1.protectedUser, post_controller_1.editPost);
router.delete('/post/:id/delete', protectedUser_1.protectedUser, post_controller_1.deletePost);
router.get('/all-posts', post_controller_1.getAllPosts);
router.get('/posts', protectedUser_1.protectedUser, post_controller_1.userPosts);
router.post('/post/:id/like', protectedUser_1.protectedUser, like_controller_1.doLike);
router.delete('/post/:id/unlike', protectedUser_1.protectedUser, like_controller_1.doUnLike);
router.get('/post/:id/likes', like_controller_1.getPostLikes);
router.get('/post/:id/like/status', protectedUser_1.protectedUser, like_controller_1.likeStatus);
router.post('/post/:id/comment', protectedUser_1.protectedUser, comment_controller_1.createComment);
router.get('/post/:id/comments', comment_controller_1.commentsOfPost);
router.put('/post/comment/:id/edit', protectedUser_1.protectedUser, comment_controller_1.editComment);
router.delete('/post/comment/:id/delete', protectedUser_1.protectedUser, comment_controller_1.deleteComment);
exports.default = router;
